{"version":3,"sources":["gif2asvg.js","global-is-node-flag.js","gif2asvg-overrides.js","image-info.js"],"names":["_classCallCheck","instance","Constructor","TypeError","global","__isNode","window","gif2asvg","require","prototype","wrapInSvgHeader","svgMarkup","svgWidth","svgHeight","q","this","svgOpen","svgClose","ImageInfo","module","exports","createImageData","width","height","U8A","Uint8ClampedArray","Uint8Array","imageData","data","ctx","document","createElement","getContext","fromGifReader","gifReader","frames","i","numFrames","frameInfo","frame","data_length","data_offset","delay","disposal","has_local_palette","interlaced","palette_offset","transparent_index","x","y","decodeAndBlitFrameRGBA","loopCount","_createClass","defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","omggif","btoa","GifWriter","GifReader","isNode","value","dataUri","base64Marker","base64Index","indexOf","base64","substring","raw","atob","rawLength","array","ArrayBuffer","charCodeAt","binaryData","slice","CHUNK_SIZE","index","result","subarray","Math","min","String","fromCharCode","apply","svg","base64ImageData","smilSvgAnimationFromImageDataGif","convertDataURIToBinary","gr","imageInfo","smilSvgAnimationFromImageDataFramesGif","canvas","putImageData","toDataURL","PNG","png","Buffer","pngImageData","sync","write","pngDataUri","convertBinaryToBase64","_encodeImageDataToPngNodeJs","_encodeImageDataToPngCanvas","imageIndex","setTags","pngImageDataUri","encodeImageDataToPng","imageId","generateImageId","imgTag","setTagId","generateAnimationId","begin","setTag"],"mappings":"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","file":"gif2asvg.full.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function (global) {\n    'use strict';\n\n    var omggif;\n    var ImageInfo;\n    var btoa = global.btoa;\n    if (global.__isNode) {\n        omggif = require('omggif');\n        ImageInfo = require('./image-info');\n        btoa = require('btoa');\n    } else {\n        omggif = { GifWriter: global.GifWriter, GifReader: global.GifReader };\n        ImageInfo = global.ImageInfo;\n    }\n\n    var gif2asvg = function () {\n        function gif2asvg() {\n            _classCallCheck(this, gif2asvg);\n\n            this.isNode = typeof window === 'undefined';\n            this.q = '\"';\n        }\n\n        _createClass(gif2asvg, [{\n            key: 'convertDataURIToBinary',\n            value: function convertDataURIToBinary(dataUri) {\n                var base64Marker = ';base64,';\n\n                var base64Index = dataUri.indexOf(base64Marker) + base64Marker.length;\n                var base64 = dataUri.substring(base64Index);\n                var raw = window.atob(base64);\n                var rawLength = raw.length;\n                var array = new Uint8Array(new ArrayBuffer(rawLength));\n\n                for (var i = 0; i < rawLength; i++) {\n                    array[i] = raw.charCodeAt(i);\n                }\n                return array;\n            }\n        }, {\n            key: 'convertBinaryToBase64',\n            value: function convertBinaryToBase64(binaryData) {\n                var CHUNK_SIZE = 0x8000; //arbitrary number\n                var index = 0;\n                var length = binaryData.length;\n                var result = '';\n                var slice;\n                while (index < length) {\n                    slice = binaryData.subarray(index, Math.min(index + CHUNK_SIZE, length));\n                    result += String.fromCharCode.apply(null, slice);\n                    index += CHUNK_SIZE;\n                }\n                return btoa(result);\n            }\n        }, {\n            key: 'encodeSvgAsBase64',\n            value: function encodeSvgAsBase64(svg) {\n                return 'data:image/svg+xml;base64,' + btoa(svg);\n            }\n        }, {\n            key: 'wrapInSvgHeader',\n            value: function wrapInSvgHeader(svgMarkup, svgWidth, svgHeight) {\n                var q = this.q;\n                var svgOpen = '<svg xmlns=' + q + 'http://www.w3.org/2000/svg' + q + ' xmlns:A=' + q + 'http://www.w3.org/1999/xlink' + q + ' width=' + q + svgWidth + q + ' height=' + q + svgHeight + q + '>';\n                var svgClose = '</svg>';\n                return svgOpen + svgMarkup + svgClose;\n            }\n        }, {\n            key: 'smilSvgAnimationFromBase64Gif',\n            value: function smilSvgAnimationFromBase64Gif(base64ImageData) {\n                return this.smilSvgAnimationFromImageDataGif(this.convertDataURIToBinary(base64ImageData));\n            }\n        }, {\n            key: 'smilSvgAnimationFromImageDataGif',\n            value: function smilSvgAnimationFromImageDataGif(imageData) {\n                var gr = new omggif.GifReader(imageData);\n                var imageInfo = ImageInfo.fromGifReader(gr);\n                return this.smilSvgAnimationFromImageDataFramesGif(imageInfo);\n            }\n        }, {\n            key: '_encodeImageDataToPngCanvas',\n            value: function _encodeImageDataToPngCanvas(imageData) {\n                var canvas = window.document.createElement('canvas');\n                canvas.width = imageData.width;\n                canvas.height = imageData.height;\n                var ctx = canvas.getContext('2d');\n                ctx.putImageData(imageData, 0, 0);\n                return canvas.toDataURL('image/png');\n            }\n        }, {\n            key: '_encodeImageDataToPngNodeJs',\n            value: function _encodeImageDataToPngNodeJs(imageData) {\n                var PNG = require('pngjs').PNG;\n\n                var png = new PNG();\n                png.width = imageData.width;\n                png.height = imageData.height;\n\n                png.data = new Buffer(imageData.data);\n                var pngImageData = PNG.sync.write(png);\n                var pngDataUri = 'data:image/png;base64,' + this.convertBinaryToBase64(pngImageData);\n                return pngDataUri;\n            }\n        }, {\n            key: 'encodeImageDataToPng',\n            value: function encodeImageDataToPng(imageData) {\n                if (global.__isNode) {\n                    return this._encodeImageDataToPngNodeJs(imageData);\n                }\n                return this._encodeImageDataToPngCanvas(imageData);\n            }\n        }, {\n            key: 'generateImageId',\n            value: function generateImageId(imageData, imageIndex) {\n                return 'F' + imageIndex;\n            }\n        }, {\n            key: 'generateAnimationId',\n            value: function generateAnimationId(imageData, imageIndex) {\n                return 'A' + imageIndex;\n            }\n        }, {\n            key: 'smilSvgAnimationFromImageDataFramesGif',\n            value: function smilSvgAnimationFromImageDataFramesGif(imageData) {\n                var q = this.q;\n                var svg = '';\n                var setTags = '';\n                for (var i = 0; i < imageData.frames.length; i++) {\n                    var frame = imageData.frames[i];\n\n                    var pngImageDataUri = this.encodeImageDataToPng(frame);\n\n                    var imageId = this.generateImageId(imageData, i);\n                    var imgTag = '<image id=' + q + imageId + q + ' height=' + q + '100%' + q + ' width=' + q + '0' + q + ' A:href=' + q + pngImageDataUri + q + '/>';\n\n                    var setTagId = this.generateAnimationId(imageData, i);\n                    var begin = '';\n                    if (i === 0) {\n                        begin += this.generateAnimationId(imageData, imageData.frames.length - 1) + '.end; 0s';\n                    } else {\n                        begin += this.generateAnimationId(imageData, i - 1) + '.end;';\n                    }\n\n                    var setTag = '<set id=' + q + setTagId + q + ' A:href=' + q + '#' + imageId + q + ' attributeName=' + q + 'width' + q + ' to=' + q + '100%' + q + ' dur=' + q + frame.delay + 'ms' + q + ' begin=' + q + begin + q + '/>';\n                    setTags += setTag;\n                    svg += imgTag;\n                }\n\n                svg += setTags;\n\n                svg = this.wrapInSvgHeader(svg, imageData.width, imageData.height);\n                return svg;\n            }\n        }]);\n\n        return gif2asvg;\n    }();\n\n    // ReSharper disable once JsUnreachableCode\n\n    if (global.__isNode) {\n        module.exports = gif2asvg;\n    } else {\n        global.gif2asvg = gif2asvg;\n    }\n})(typeof window === 'undefined' ? global : window);\n//# sourceMappingURL=gif2asvg.js.map\n","(function(global) {\r\n    'use strict';\r\n    global.__isNode = typeof window === 'undefined';\r\n\r\n})(typeof window === 'undefined' ? global : window);\r\n","(function(global) {\r\n    'use strict';\r\n\r\n    var gif2asvg;\r\n    if (global.__isNode) {\r\n        gif2asvg = require('./dist/gif2asvg');\r\n    } else {\r\n        gif2asvg = global.gif2asvg;\r\n    }\r\n\r\n    gif2asvg.prototype.wrapInSvgHeader = function(svgMarkup, svgWidth, svgHeight) {\r\n        var q = this.q;\r\n        var svgOpen = '<svg id=\"ts0000000000000000\" xmlns=' + q + 'http://www.w3.org/2000/svg' + q + ' xmlns:A=' + q + 'http://www.w3.org/1999/xlink' + q + ' width=' + q + svgWidth + q + ' height=' + q + svgHeight + q + '>';\r\n        var svgClose = '</svg>';\r\n        return svgOpen + svgMarkup + svgClose;\r\n    };\r\n\r\n})(typeof window === 'undefined' ? global : window);","'use strict';\n\n(function (global) {\n    'use strict';\n\n    var ImageInfo = {};\n    if (global.__isNode) {\n        module.exports = ImageInfo;\n    } else {\n        global.ImageInfo = ImageInfo;\n    }\n\n    ImageInfo.createImageData = function (width, height) {\n        if (global.__isNode) {\n            // ReSharper disable once InconsistentNaming\n            var U8A = Uint8ClampedArray || Uint8Array;\n            var imageData = { width: width, height: height };\n            imageData.data = new U8A(width * height * 4);\n            return imageData;\n        }\n\n        var ctx = window.document.createElement('canvas').getContext('2d');\n        return ctx.createImageData(width, height);\n    };\n\n    ImageInfo.fromGifReader = function (gifReader) {\n        var imageData = ImageInfo.createImageData(gifReader.width, gifReader.height);\n\n        imageData.frames = [];\n\n        for (var i = 0; i < gifReader.numFrames(); i++) {\n            var frameInfo = gifReader.frameInfo(i);\n\n            var width = frameInfo.width;\n            var height = frameInfo.height;\n            var frame = ImageInfo.createImageData(width, height);\n\n            frame.data_length = frameInfo.data_length;\n            frame.data_offset = frameInfo.data_offset;\n            frame.delay = frameInfo.delay;\n            frame.disposal = frameInfo.disposal;\n            frame.has_local_palette = frameInfo.has_local_palette;\n            frame.interlaced = frameInfo.interlaced;\n            frame.palette_offset = frameInfo.palette_offset;\n            frame.transparent_index = frameInfo.transparent_index;\n            frame.x = frameInfo.x;\n            frame.y = frameInfo.y;\n            gifReader.decodeAndBlitFrameRGBA(i, frame.data);\n            imageData.frames[i] = frame;\n\n            if (frame.delay) {\n                frame.delay = frame.delay * 10; // bugfix\n            }\n        }\n\n        imageData.loopCount = gifReader.loopCount();\n        if (!imageData.loopCount) {\n            imageData.loopCount = -1;\n        }\n\n        return imageData;\n    };\n})(typeof window === 'undefined' ? global : window);\n//# sourceMappingURL=image-info.js.map\n"],"sourceRoot":"/source/"}